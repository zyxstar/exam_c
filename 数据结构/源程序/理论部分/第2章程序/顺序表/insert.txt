
/* ==================Program Description================== */
/* 程序名称：insert.c                                      */
/* 程序目的：在顺序表的第i个位置插入新的元素               */
/* Written By Yang yonghu                                  */
/* ========================================================*/
# include <stdio.h>
#define Maxsize  10
typedef struct
{int v[Maxsize]; /*存放线性表元素的数组，关系隐含*/
 int len;       /*表示线性表的长度*/
}sqlist;
int insert(sqlist *L,int i,int x)
/*L为sqlist顺序表类型指针变量,i为插入元素的位序号，x为插入元素的值*/
{int j;
 if((*L).len==Maxsize)             /*判断线性表的存储空间是否已满*/
   {printf("Overflow!\n");
    return 0;
   }
 else if ((i<1)||i>(*L).len+1)        /*检查i值是否超出所允许的范围*/
   {printf("the location is wrong/n");
    return 0;
   }
 else
   {for (j=(*L).len-1;j>=i-1;j--)
                                /*将第i个元素和它后面的所有元素均后移一个位置*/
      (*L).v[j+1]=(*L).v[j];
    (*L).v[i-1]=x;             /* 将新的元素写入到空出的下标为i-1的位置上*/
    (*L).len=(*L).len+1;       /*线性表的长度增加1*/
    return(1);
   }
}
 main()
 {
  int i,location,value;
  sqlist a;                  /*定义顺序表a*/
  a.len=5;
  for(i=0;i<5;i++)
     a.v[i]=i+1;
  for(i=0;i<a.len;i++)        /*打印目前顺序表中的数据元素*/
     printf("%d",a.v[i]);
  printf("\nplease input the location to insert:");
  scanf("%d",&location);
  printf("please input the value:");
  scanf("%d",&value);
  if(insert(&a,location,value))/*调用insert函数，插入数据,成功返回1，失败返回0*/
    for(i=0;i<a.len;i++)
      printf("%d",a.v[i]);
  else
    printf("插入失败!");
 }
